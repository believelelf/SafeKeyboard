cipher:
  safeKeyboardKeyStorePath: E:\\Java\\idea_workspaces\\SafeKeyboard\\safeKeyboard.keystore
  safeKeyboardCerPath: E:\\Java\\idea_workspaces\\SafeKeyboard\\safeKeyboard.cer
  clientRsaPrivateKeyPkcs1Path: E:\Java\idea_workspaces\SafeKeyboard\safeKeyboard-client\src\main\resources\client_rsa_private_key_pkcs1.pem
  serverRsaPublicKeyPkcs8Path: E:\Java\idea_workspaces\SafeKeyboard\safeKeyboard-client\src\main\resources\server_rsa_public_key_pkcs8.der
  serverRsaPrivateKeyPkcs1Path: E:\Java\idea_workspaces\SafeKeyboard\safeKeyboard-server\src\main\resources\server_rsa_private_key_pkcs1.pem
  clientRsaPublicKeyPkcs8Path: E:\Java\idea_workspaces\SafeKeyboard\safeKeyboard-server\src\main\resources\client_rsa_public_key_pkcs8.der
  alias: www.weiquding.com
  storePass: weiquding
  keyPass: weiquding
  slat: Kxi1PnJd8JqcOKoX3fv/aQ==
  appSecret: NsVmnmNinzQtO83xni00ZG6mLsbINzctnjJhNsA0njU2NW3I
  fileDir: E:\\Java\\idea_workspaces\\SafeKeyboard\\file
debug: true
#
# {@link org.springframework.core.io.ResourceLoader#getResource()}
# <p>The handle should always be a reusable resource descriptor,
#	 * allowing for multiple {@link Resource#getInputStream()} calls.
#<p>
#  <ul>
#  * <li>Must support fully qualified URLs, e.g. "file:C:/test.dat".
#  * <li>Must support classpath pseudo-URLs, e.g. "classpath:test.dat".
#  * <li>Should support relative file paths, e.g. "WEB-INF/test.dat".
#  * (This will be implementation-specific, typically provided by an
#  * ApplicationContext implementation.)
#  * </ul>
base:
  messages:
    default-mapping-code: BASEBP0001
  config:
    systemCode: SAFE0001
    systemName: SAFE-APP
  exception:
    outputHostName: true
  http:
    rootUri:
     skbs:  http://localhost:8082
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/user?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    driverClassName: com.mysql.cj.jdbc.Driver
    username: root
    password: root